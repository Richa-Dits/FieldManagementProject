// <auto-generated />
using System;
using FieldMgt.Core.DomainModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FieldMgt.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FieldMgt.Core.DomainModels.AddressDetail", b =>
                {
                    b.Property<int>("AddressDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("AddressType")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("AddressDetailId");

                    b.HasIndex("AddressType");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("AddressDetails");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("StateId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillingAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientAddressAddressDetailId")
                        .HasColumnType("int");

                    b.Property<string>("ClientDescription")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ClientSource")
                        .HasColumnType("int");

                    b.Property<string>("ClienyCompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ContactDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PermanentAddressId")
                        .HasColumnType("int");

                    b.HasKey("ClientId");

                    b.HasIndex("ClientAddressAddressDetailId");

                    b.HasIndex("ClientSource");

                    b.HasIndex("ContactDetailId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ClientContact", b =>
                {
                    b.Property<int>("ClientContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ClientContactId");

                    b.HasIndex("AddressDetailId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContactDetailId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Gender");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("ClientContacts");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ContactDetail", b =>
                {
                    b.Property<int>("ContactDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlternateEmail")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AlternatePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrimaryEmail")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrimaryPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactDetailId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CountryId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Estimation", b =>
                {
                    b.Property<int>("EstimationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("EstimationAmount")
                        .HasColumnType("decimal(16,2)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobOrderID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("EstimationId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("JobOrderID");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Estimations");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.EstimationDetail", b =>
                {
                    b.Property<int>("EstimationDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstimationId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductMasterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProductUnitPrice")
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal?>("QuantityRequired")
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("EstimationDetailId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("EstimationId");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ProductMasterId");

                    b.ToTable("EstimationDetails");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionTaken")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OrderId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.GlobalCode", b =>
                {
                    b.Property<int>("GlobalCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("GlobalCodeCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCodeName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("GlobalCodeId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("GlobalCodeCategoryId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("GlobalCodes");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.GlobalCodeCategory", b =>
                {
                    b.Property<int>("GlobalCodeCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AllowAddDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowCodeNameEdit")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GlobalCodeCategoryName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("GlobalCodeCategoryId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("GlobalCodeCategories");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.JobOrder", b =>
                {
                    b.Property<int>("JobOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobOrderDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("JobOrderId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("LeadId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("JobOrders");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.JobOrderRequirement", b =>
                {
                    b.Property<int>("JobOrderRequirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequirementDescription")
                        .HasColumnType("nvarchar(455)");

                    b.Property<string>("RequirementGatheredBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("RequirementGatheredOn")
                        .HasColumnType("datetime2");

                    b.HasKey("JobOrderRequirementId");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("JobOrderId");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("RequirementGatheredBy");

                    b.ToTable("JobOrderRequirements");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Lead", b =>
                {
                    b.Property<int>("LeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BillingAddressId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ContactDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LeadCompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LeadDescription")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("LeadSource")
                        .HasColumnType("int");

                    b.Property<int?>("LeadStage")
                        .HasColumnType("int");

                    b.Property<int>("LeadStatus")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermanentAddressId")
                        .HasColumnType("int");

                    b.HasKey("LeadId");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContactDetailId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("LeadSource");

                    b.HasIndex("LeadStage");

                    b.HasIndex("LeadStatus");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PermanentAddressId");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.LeadCall", b =>
                {
                    b.Property<int>("LeadCallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CallStatus")
                        .HasColumnType("int");

                    b.Property<string>("CalledBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CalledOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("LeadCallId");

                    b.HasIndex("CallStatus");

                    b.HasIndex("CalledBy");

                    b.HasIndex("LeadId");

                    b.ToTable("LeadCalls");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.LeadContact", b =>
                {
                    b.Property<int>("LeadContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("LeadContactId");

                    b.HasIndex("AddressDetailId");

                    b.HasIndex("ContactDetailId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Gender");

                    b.HasIndex("LeadId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("LeadContacts");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Maintenance", b =>
                {
                    b.Property<int>("MaintenanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MaintenanceType")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("MaintenanceId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("MaintenanceType");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OrderId");

                    b.ToTable("Maintenance");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Notes", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoteDescription")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NoteTypeId")
                        .HasColumnType("int");

                    b.HasKey("NoteId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("NoteTypeId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("AmountPaid")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("BalanceAmount")
                        .HasColumnType("decimal(16,2)");

                    b.Property<int?>("BillingAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("CompletionCertifcate")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ContactDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("OrderAmount")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("OrderDescription")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<int?>("PermanentAddressId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("AssignedTo");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContactDetailId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OrderStatus");

                    b.HasIndex("PaymentStatus");

                    b.HasIndex("PermanentAddressId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.OrderDetail", b =>
                {
                    b.Property<int>("OrderProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductMasterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QuantityRequired")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("OrderProductId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("JobOrderId");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductMasterId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.OrderImplementationDetail", b =>
                {
                    b.Property<int>("OrderImplementationDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ConfirmedCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int?>("NumberofDayRequired")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PocContactNumber")
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("PocName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ProposedCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceProviderLocationId")
                        .HasColumnType("int");

                    b.Property<string>("TeamLead")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TeamLeadContactNumber")
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("OrderImplementationDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ServiceProviderLocationId");

                    b.ToTable("OrderImplementationDetails");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.OrderTransaction", b =>
                {
                    b.Property<int>("OrderTransactiontId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AmountPaid")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("PaymentReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderTransactiontId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderTransactions");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Procurement", b =>
                {
                    b.Property<int>("ProcurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ProcurementId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Procurements");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ProcurementProduct", b =>
                {
                    b.Property<int>("ProcurementItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductMasterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ProcurementItemId");

                    b.HasIndex("ProductMasterId");

                    b.HasIndex("VendorId");

                    b.ToTable("ProcurementProducts");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductMasterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QuantityinStock")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("QuantityonOrder")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int?>("ThresholdLimit")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ProductMasterId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ProductMaster", b =>
                {
                    b.Property<int>("ProductMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductCategory")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ProductMasterId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ProductCategory");

                    b.ToTable("ProductsMaster");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ProductsIssued", b =>
                {
                    b.Property<int>("ProductIssuedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("IssuedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QuantityIssued")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("ProductIssuedId");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("IssuedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OrderId");

                    b.ToTable("ProductsIssued");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Quotation", b =>
                {
                    b.Property<int>("QuotationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BuyerDesiredPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("InitialQuotedPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastQuotedPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("MinPossiblePrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("QuotationId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("JobOrderId");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OrderId");

                    b.ToTable("Quotations");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ServiceProvider", b =>
                {
                    b.Property<int>("ServiceProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillingAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PermanentAddressId")
                        .HasColumnType("int");

                    b.Property<string>("SPCreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SPDeletedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SPModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ServiceProviderIncharge")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ServiceProviderName")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ServiceProviderId");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ContactDetailId");

                    b.HasIndex("PermanentAddressId");

                    b.HasIndex("SPCreatedById");

                    b.HasIndex("SPDeletedById");

                    b.HasIndex("SPModifiedById");

                    b.ToTable("ServiceProviders");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ServiceProviderLocation", b =>
                {
                    b.Property<int>("ServiceProviderLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillingAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PermanentAddressId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceProviderId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceProviderLocationIncharge")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ServiceProviderLocationName")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ServiceProviderLocationId");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ContactDetailId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PermanentAddressId");

                    b.HasIndex("ServiceProviderId");

                    b.ToTable("ServiceProviderLocations");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContactDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("CorrespondenceAddressId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Designation")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PermanentAddressId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("StaffId");

                    b.HasIndex("ContactDetailId");

                    b.HasIndex("CorrespondenceAddressId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Designation");

                    b.HasIndex("Gender");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PermanentAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("State");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillingAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PermanentAddressId")
                        .HasColumnType("int");

                    b.Property<string>("VendorAccountNumber")
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("VendorBankBranch")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendorBankName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("VendorCompanyName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorContactPersonName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("VendorGSTNumber")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("VendorIFSCCode")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("VendorOwnerorMD")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("VendorId");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ContactDetailId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PermanentAddressId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.VendorProducts", b =>
                {
                    b.Property<int>("VendorProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductMasterId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("VendorProductId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ProductMasterId");

                    b.ToTable("VendorProducts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.AddressDetail", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "AddressCode")
                        .WithMany("AddressTypeRef")
                        .HasForeignKey("AddressType")
                        .HasConstraintName("AddressTypeRef_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressCode");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("State");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.City", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "CityCreatedBy")
                        .WithMany("Ref72Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("CityCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "CityDeletedBy")
                        .WithMany("Ref74Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("CityDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "CityModifiedBy")
                        .WithMany("Ref73Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("CityModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityCreatedBy");

                    b.Navigation("CityDeletedBy");

                    b.Navigation("CityModifiedBy");

                    b.Navigation("State");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Client", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "ClientAddress")
                        .WithMany()
                        .HasForeignKey("ClientAddressAddressDetailId");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "RefSource")
                        .WithMany("ClientSourceRef")
                        .HasForeignKey("ClientSource")
                        .HasConstraintName("ClientSource_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ContactDetail", "ContactDetail")
                        .WithMany()
                        .HasForeignKey("ContactDetailId");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ClientCreatedBy")
                        .WithMany("Ref69Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("ClientCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ClientDeletedBy")
                        .WithMany("Ref71Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("ClientDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ClientModifiedBy")
                        .WithMany("Ref70Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("ClientModifiedBy_FK");

                    b.Navigation("ClientAddress");

                    b.Navigation("ClientCreatedBy");

                    b.Navigation("ClientDeletedBy");

                    b.Navigation("ClientModifiedBy");

                    b.Navigation("ContactDetail");

                    b.Navigation("RefSource");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ClientContact", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "AddressDetail")
                        .WithMany()
                        .HasForeignKey("AddressDetailId");

                    b.HasOne("FieldMgt.Core.DomainModels.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("FieldMgt.Core.DomainModels.ContactDetail", "ContactDetail")
                        .WithMany()
                        .HasForeignKey("ContactDetailId");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ClientContactCreatedBy")
                        .WithMany("Ref81Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("ClientContactCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ClientContactDeletedBy")
                        .WithMany("Ref83Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("ClientContactDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "RefGender")
                        .WithMany("ClientContactSourceRef")
                        .HasForeignKey("Gender")
                        .HasConstraintName("ClientContactGender_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ClientContactModifiedBy")
                        .WithMany("Ref82Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("ClientContactModifiedBy_FK");

                    b.Navigation("AddressDetail");

                    b.Navigation("Client");

                    b.Navigation("ClientContactCreatedBy");

                    b.Navigation("ClientContactDeletedBy");

                    b.Navigation("ClientContactModifiedBy");

                    b.Navigation("ContactDetail");

                    b.Navigation("RefGender");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ContactDetail", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ContactDetailsCreatedBy")
                        .WithMany("Ref84Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("ContactDetailCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ContactDetailsDeletedBy")
                        .WithMany("Ref86Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("ContactDetailDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ContactDetailsModifiedBy")
                        .WithMany("Ref85Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("ContactDetailModifiedBy_FK");

                    b.Navigation("ContactDetailsCreatedBy");

                    b.Navigation("ContactDetailsDeletedBy");

                    b.Navigation("ContactDetailsModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Country", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "CountryCreatedBy")
                        .WithMany("Ref78Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("CountryCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "CountryDeletedBy")
                        .WithMany("Ref80Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("CountryDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "CountryModifiedBy")
                        .WithMany("Ref79Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("CountryModifiedBy_FK");

                    b.Navigation("CountryCreatedBy");

                    b.Navigation("CountryDeletedBy");

                    b.Navigation("CountryModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Estimation", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "EstimationCreatedBy")
                        .WithMany("Ref25Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("EstimationCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "EstimationDeletedBy")
                        .WithMany("Ref36Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("EstimationDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.JobOrder", "JobOrder")
                        .WithMany()
                        .HasForeignKey("JobOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "EstimationModifiedBy")
                        .WithMany("Ref26Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("EstimationModifiedBy_FK");

                    b.Navigation("EstimationCreatedBy");

                    b.Navigation("EstimationDeletedBy");

                    b.Navigation("EstimationModifiedBy");

                    b.Navigation("JobOrder");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.EstimationDetail", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "EstimationDetailCreatedBy")
                        .WithMany("Ref37Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("EstimationDetailCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "EstimationDetailDeletedBy")
                        .WithMany("Ref39Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("EstimationDetailDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.Estimation", "Estimation")
                        .WithMany()
                        .HasForeignKey("EstimationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "EstimationDetailModifiedBy")
                        .WithMany("Ref38Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("EstimationDetailModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ProductMaster", "ProductMaster")
                        .WithMany()
                        .HasForeignKey("ProductMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estimation");

                    b.Navigation("EstimationDetailCreatedBy");

                    b.Navigation("EstimationDetailDeletedBy");

                    b.Navigation("EstimationDetailModifiedBy");

                    b.Navigation("ProductMaster");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Feedback", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "FeedBackCreatedBy")
                        .WithMany("Ref40Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FeedbackCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "FeedBackDeletedBy")
                        .WithMany("Ref42Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("FeedbackDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "FeedBackModifiedBy")
                        .WithMany("Ref41Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FeedbackModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeedBackCreatedBy");

                    b.Navigation("FeedBackDeletedBy");

                    b.Navigation("FeedBackModifiedBy");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.GlobalCode", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "GlobalCodeCreatedBy")
                        .WithMany("Ref66Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("GlobalCodeCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "GlobalCodeDeletedBy")
                        .WithMany("Ref68Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("GlobalCodeDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCodeCategory", "GlobalCodeCategory")
                        .WithMany()
                        .HasForeignKey("GlobalCodeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "GlobalCodeModifiedBy")
                        .WithMany("Ref67Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("GlobalCodeModifiedBy_FK");

                    b.Navigation("GlobalCodeCategory");

                    b.Navigation("GlobalCodeCreatedBy");

                    b.Navigation("GlobalCodeDeletedBy");

                    b.Navigation("GlobalCodeModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.GlobalCodeCategory", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "GlobalCodeCategoryCreatedBy")
                        .WithMany("Ref63Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("GlobalCodeCategoryCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "GlobalCodeCategoryDeletedBy")
                        .WithMany("Ref65Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("GlobalCodeCategoryDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "GlobalCodeCategoryModifiedBy")
                        .WithMany("Ref64Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("GlobalCodeCategoryModifiedBy_FK");

                    b.Navigation("GlobalCodeCategoryCreatedBy");

                    b.Navigation("GlobalCodeCategoryDeletedBy");

                    b.Navigation("GlobalCodeCategoryModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.JobOrder", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "JobOrderCreatedBy")
                        .WithMany("Ref87Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("JobOrderCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "JobOrderDeletedBy")
                        .WithMany("Ref89Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("JobOrderDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.Lead", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "JobOrderModifiedBy")
                        .WithMany("Ref88Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("JobOrderModifiedBy_FK");

                    b.Navigation("Client");

                    b.Navigation("JobOrderCreatedBy");

                    b.Navigation("JobOrderDeletedBy");

                    b.Navigation("JobOrderModifiedBy");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.JobOrderRequirement", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "RequirementDeletedBy")
                        .WithMany("Ref47Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("RequirementDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.JobOrder", "JobOrder")
                        .WithMany()
                        .HasForeignKey("JobOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "RequirementModifiedBy")
                        .WithMany("Ref24Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("RequirementModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "RequirementCreatedBy")
                        .WithMany("Ref23Navigation")
                        .HasForeignKey("RequirementGatheredBy")
                        .HasConstraintName("RequirementCreatedBy_FK");

                    b.Navigation("JobOrder");

                    b.Navigation("RequirementCreatedBy");

                    b.Navigation("RequirementDeletedBy");

                    b.Navigation("RequirementModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Lead", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "LeadBillingAddress")
                        .WithMany("LeadAddress2Id")
                        .HasForeignKey("BillingAddressId")
                        .HasConstraintName("LBillingAddress_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.ContactDetail", "ContactDetail")
                        .WithMany()
                        .HasForeignKey("ContactDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "LeadCreatedBy")
                        .WithMany("Ref5Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("LCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "LeadDeletedBy")
                        .WithMany("Ref7Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("LDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "RefSource")
                        .WithMany("Lead2Navigation")
                        .HasForeignKey("LeadSource")
                        .HasConstraintName("LeadSource_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "RefStatus")
                        .WithMany("Lead3Navigation")
                        .HasForeignKey("LeadStage")
                        .HasConstraintName("LeadStage_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "RefStage")
                        .WithMany("Lead1Navigation")
                        .HasForeignKey("LeadStatus")
                        .HasConstraintName("LeadStatus_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "LeadModifiedBy")
                        .WithMany("Ref6Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("LModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "LeadAddress")
                        .WithMany("LeadAddress1Id")
                        .HasForeignKey("PermanentAddressId")
                        .HasConstraintName("LPermaAddress_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("ContactDetail");

                    b.Navigation("LeadAddress");

                    b.Navigation("LeadBillingAddress");

                    b.Navigation("LeadCreatedBy");

                    b.Navigation("LeadDeletedBy");

                    b.Navigation("LeadModifiedBy");

                    b.Navigation("RefSource");

                    b.Navigation("RefStage");

                    b.Navigation("RefStatus");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.LeadCall", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "RefLeadCallStatus")
                        .WithMany("LeadCall1Navigation")
                        .HasForeignKey("CallStatus")
                        .HasConstraintName("LCStatus_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "LeadCalledBy")
                        .WithMany("Ref14Navigation")
                        .HasForeignKey("CalledBy")
                        .HasConstraintName("LCCalledBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.Lead", "RefCallLeadId")
                        .WithMany("Ref2LeadId")
                        .HasForeignKey("LeadId")
                        .HasConstraintName("LCLeadId_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeadCalledBy");

                    b.Navigation("RefCallLeadId");

                    b.Navigation("RefLeadCallStatus");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.LeadContact", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "AddressDetail")
                        .WithMany()
                        .HasForeignKey("AddressDetailId");

                    b.HasOne("FieldMgt.Core.DomainModels.ContactDetail", "ContactDetail")
                        .WithMany()
                        .HasForeignKey("ContactDetailId");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "LeadContactCreatedBy")
                        .WithMany("Ref8Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("LCCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "LeadContactDeletedBy")
                        .WithMany("Ref10Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("LCDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "RefGender")
                        .WithMany("LeadContact1Navigation")
                        .HasForeignKey("Gender")
                        .HasConstraintName("LCGender_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.Lead", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "LeadContactModifiedBy")
                        .WithMany("Ref9Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("LCModifiedBy_FK");

                    b.Navigation("AddressDetail");

                    b.Navigation("ContactDetail");

                    b.Navigation("Lead");

                    b.Navigation("LeadContactCreatedBy");

                    b.Navigation("LeadContactDeletedBy");

                    b.Navigation("LeadContactModifiedBy");

                    b.Navigation("RefGender");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Maintenance", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "MaintenanceCreatedBy")
                        .WithMany("Ref43Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("MaintenanceCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "MaintenanceDeletedBy")
                        .WithMany("Ref45Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("MaintenanceDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "RefMaintenanceType")
                        .WithMany("MaintenanceTypesRef")
                        .HasForeignKey("MaintenanceType")
                        .HasConstraintName("MaintenanceType_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "MaintenanceModifiedBy")
                        .WithMany("Ref44Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("MaintenanceModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("MaintenanceCreatedBy");

                    b.Navigation("MaintenanceDeletedBy");

                    b.Navigation("MaintenanceModifiedBy");

                    b.Navigation("Order");

                    b.Navigation("RefMaintenanceType");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Notes", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "NotesCreatedBy")
                        .WithMany("Ref11Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("NotesCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "NotesDeletedBy")
                        .WithMany("Ref13Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("NotesDeletedTo_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "NotesModifiedBy")
                        .WithMany("Ref12Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("NotesModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "NoteType")
                        .WithMany("NotesTypeRef")
                        .HasForeignKey("NoteTypeId")
                        .HasConstraintName("NoteTypeRef_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotesCreatedBy");

                    b.Navigation("NotesDeletedBy");

                    b.Navigation("NotesModifiedBy");

                    b.Navigation("NoteType");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Order", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "OrderAssignedTo")
                        .WithMany("Ref20Navigation")
                        .HasForeignKey("AssignedTo")
                        .HasConstraintName("OrderAssignedTo_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "OrderBillingAddress")
                        .WithMany("OrderAddress2Id")
                        .HasForeignKey("BillingAddressId")
                        .HasConstraintName("OrderBillingAddress_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.ContactDetail", "ContactDetail")
                        .WithMany()
                        .HasForeignKey("ContactDetailId");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "OrderCreatedBy")
                        .WithMany("Ref17Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("OrderCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "OrderDeletedBy")
                        .WithMany("Ref19Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("OrderDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "OrderModifiedBy")
                        .WithMany("Ref18Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("OrderModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "OrderCompletionStatus")
                        .WithMany("OrdersStatus")
                        .HasForeignKey("OrderStatus")
                        .HasConstraintName("OrderStatus_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "OrderPaymentStatus")
                        .WithMany("OPStatus")
                        .HasForeignKey("PaymentStatus")
                        .HasConstraintName("OrderPaymentStatus_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "OrderAddress")
                        .WithMany("OrderAddress1Id")
                        .HasForeignKey("PermanentAddressId")
                        .HasConstraintName("OrderPermaAddress_FK");

                    b.Navigation("Client");

                    b.Navigation("ContactDetail");

                    b.Navigation("OrderAddress");

                    b.Navigation("OrderAssignedTo");

                    b.Navigation("OrderBillingAddress");

                    b.Navigation("OrderCompletionStatus");

                    b.Navigation("OrderCreatedBy");

                    b.Navigation("OrderDeletedBy");

                    b.Navigation("OrderModifiedBy");

                    b.Navigation("OrderPaymentStatus");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.OrderDetail", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "OrderProductCreatedBy")
                        .WithMany("Ref48Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("OPCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "OrderProductDeletedBy")
                        .WithMany("Ref50Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("OPDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.JobOrder", "JobOrder")
                        .WithMany()
                        .HasForeignKey("JobOrderId");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "OrderProductModifiedBy")
                        .WithMany("Ref49Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("OPModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("FieldMgt.Core.DomainModels.ProductMaster", "ProductMaster")
                        .WithMany()
                        .HasForeignKey("ProductMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobOrder");

                    b.Navigation("Order");

                    b.Navigation("OrderProductCreatedBy");

                    b.Navigation("OrderProductDeletedBy");

                    b.Navigation("OrderProductModifiedBy");

                    b.Navigation("ProductMaster");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.OrderImplementationDetail", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.ServiceProviderLocation", "ServiceProviderLocation")
                        .WithMany()
                        .HasForeignKey("ServiceProviderLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ServiceProviderLocation");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.OrderTransaction", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "OrderTransactionCreatedBy")
                        .WithMany("Ref27Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("OrderTransactionCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "OrderTransactionDeletedBy")
                        .WithMany("Ref29Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("OrderTransactionDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "OrderTransactionModifiedBy")
                        .WithMany("Ref28Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("OrderTransactionModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("OrderTransactionCreatedBy");

                    b.Navigation("OrderTransactionDeletedBy");

                    b.Navigation("OrderTransactionModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Procurement", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ProcurementCreatedBy")
                        .WithMany("Ref51Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("ProcurementCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ProcurementDeletedBy")
                        .WithMany("Ref53Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("ProcurementDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ProcurementModifiedBy")
                        .WithMany("Ref52Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("ProcurementModifiedBy_FK");

                    b.Navigation("ProcurementCreatedBy");

                    b.Navigation("ProcurementDeletedBy");

                    b.Navigation("ProcurementModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ProcurementProduct", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ProductMaster", "ProductMaster")
                        .WithMany()
                        .HasForeignKey("ProductMasterId");

                    b.HasOne("FieldMgt.Core.DomainModels.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductMaster");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Product", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ProductCreatedBy")
                        .WithMany("Ref54Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("ProductCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ProductDeletedBy")
                        .WithMany("Ref56Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("ProductDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ProductModifiedBy")
                        .WithMany("Ref55Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("ProductModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ProductMaster", "ProductMaster")
                        .WithMany()
                        .HasForeignKey("ProductMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCreatedBy");

                    b.Navigation("ProductDeletedBy");

                    b.Navigation("ProductMaster");

                    b.Navigation("ProductModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ProductMaster", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ProductMasterCreatedBy")
                        .WithMany("Ref57Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("PMCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ProductMasterDeletedBy")
                        .WithMany("Ref59Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("PMDeleted_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ProductMasterModifiedBy")
                        .WithMany("Ref58Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("PMModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "Category")
                        .WithMany("ProductCategoryRef")
                        .HasForeignKey("ProductCategory")
                        .HasConstraintName("PMCategory_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ProductMasterCreatedBy");

                    b.Navigation("ProductMasterDeletedBy");

                    b.Navigation("ProductMasterModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ProductsIssued", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "PIDeletedBy")
                        .WithMany("Ref35Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("PIdeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "ProductIssuedBy")
                        .WithMany("Ref33Navigation")
                        .HasForeignKey("IssuedBy")
                        .HasConstraintName("ProductIssuedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "PIModifiedBy")
                        .WithMany("Ref34Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("PIModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("PIDeletedBy");

                    b.Navigation("PIModifiedBy");

                    b.Navigation("ProductIssuedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Quotation", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "NegotitationCreatedBy")
                        .WithMany("Ref21Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("QuotationCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "NegotitationDeletedBy")
                        .WithMany("Ref46Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("QuotationDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.JobOrder", "JobOrder")
                        .WithMany()
                        .HasForeignKey("JobOrderId");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "NegotitationModifiedBy")
                        .WithMany("Ref22Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("QuotationModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("JobOrder");

                    b.Navigation("NegotitationCreatedBy");

                    b.Navigation("NegotitationDeletedBy");

                    b.Navigation("NegotitationModifiedBy");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ServiceProvider", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "ServiceProviderBillingAddress")
                        .WithMany("ServiceProviderAddress2Id")
                        .HasForeignKey("BillingAddressId")
                        .HasConstraintName("SPBillingAddress_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ContactDetail", "ContactDetail")
                        .WithMany()
                        .HasForeignKey("ContactDetailId");

                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "ServiceProviderAddress")
                        .WithMany("ServiceProviderAddress1Id")
                        .HasForeignKey("PermanentAddressId")
                        .HasConstraintName("SPPermaAddress_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "SPCreatedBy")
                        .WithMany()
                        .HasForeignKey("SPCreatedById");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "SPDeletedBy")
                        .WithMany()
                        .HasForeignKey("SPDeletedById");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "SPModifiedBy")
                        .WithMany()
                        .HasForeignKey("SPModifiedById");

                    b.Navigation("ContactDetail");

                    b.Navigation("ServiceProviderAddress");

                    b.Navigation("ServiceProviderBillingAddress");

                    b.Navigation("SPCreatedBy");

                    b.Navigation("SPDeletedBy");

                    b.Navigation("SPModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ServiceProviderLocation", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "ServiceProviderLocationBillingAddress")
                        .WithMany("ServiceProviderLocationAddress2Id")
                        .HasForeignKey("BillingAddressId")
                        .HasConstraintName("SPLocationBillingAddress_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ContactDetail", "ContactDetail")
                        .WithMany()
                        .HasForeignKey("ContactDetailId");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "SPLCreatedBy")
                        .WithMany("Ref60Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("SPLCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "SPLDeletedBy")
                        .WithMany("Ref62Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("SPLDeleted_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "SPLModifiedBy")
                        .WithMany("Ref61Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("SPLModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "ServiceProviderLocationAddress")
                        .WithMany("ServiceProviderLocationAddress1Id")
                        .HasForeignKey("PermanentAddressId")
                        .HasConstraintName("SPLocationPermaAddress_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ServiceProvider", "ServiceProvider")
                        .WithMany()
                        .HasForeignKey("ServiceProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactDetail");

                    b.Navigation("ServiceProvider");

                    b.Navigation("ServiceProviderLocationAddress");

                    b.Navigation("ServiceProviderLocationBillingAddress");

                    b.Navigation("SPLCreatedBy");

                    b.Navigation("SPLDeletedBy");

                    b.Navigation("SPLModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Staff", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ContactDetail", "ContactDetail")
                        .WithMany()
                        .HasForeignKey("ContactDetailId");

                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "StaffCorresAddress")
                        .WithMany("StaffAddress2Id")
                        .HasForeignKey("CorrespondenceAddressId")
                        .HasConstraintName("CorrespondenceAddress_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "StaffCreatedBy")
                        .WithMany("Ref2Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("Created_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "StaffDeletedBy")
                        .WithMany("Ref4Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("Deleted_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "StaffDesignation")
                        .WithMany("Staff1Navigation")
                        .HasForeignKey("Designation")
                        .HasConstraintName("Designation_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.GlobalCode", "StaffGender")
                        .WithMany("Staff2Navigation")
                        .HasForeignKey("Gender")
                        .HasConstraintName("StaffGender_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "StaffModifiedBy")
                        .WithMany("Ref3Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("Modified_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "StaffPermaAddress")
                        .WithMany("StaffAddress1Id")
                        .HasForeignKey("PermanentAddressId")
                        .HasConstraintName("PermanentAddress_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "StaffUserId")
                        .WithMany("Ref1Navigation")
                        .HasForeignKey("UserId")
                        .HasConstraintName("UserId_FK");

                    b.Navigation("ContactDetail");

                    b.Navigation("StaffCorresAddress");

                    b.Navigation("StaffCreatedBy");

                    b.Navigation("StaffDeletedBy");

                    b.Navigation("StaffDesignation");

                    b.Navigation("StaffGender");

                    b.Navigation("StaffModifiedBy");

                    b.Navigation("StaffPermaAddress");

                    b.Navigation("StaffUserId");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.State", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "StateCreatedBy")
                        .WithMany("Ref75Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("StateCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "StateDeletedBy")
                        .WithMany("Ref77Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("StateDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "StateModifiedBy")
                        .WithMany("Ref76Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("StateModifiedBy_FK");

                    b.Navigation("Country");

                    b.Navigation("StateCreatedBy");

                    b.Navigation("StateDeletedBy");

                    b.Navigation("StateModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Vendor", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "VendorBillingAddress")
                        .WithMany("VendorAddress2Id")
                        .HasForeignKey("BillingAddressId")
                        .HasConstraintName("VendorBillingAddress_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ContactDetail", "ContactDetail")
                        .WithMany()
                        .HasForeignKey("ContactDetailId");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "VendorCreatedBy")
                        .WithMany("Ref30Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("VendorCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "VendorDeletedBy")
                        .WithMany("Ref32Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("VendorDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "VendorModifiedBy")
                        .WithMany("Ref31Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("VendorModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.AddressDetail", "VendorAddress")
                        .WithMany("VendorAddress1Id")
                        .HasForeignKey("PermanentAddressId")
                        .HasConstraintName("VendorPermaAddress_FK");

                    b.Navigation("ContactDetail");

                    b.Navigation("VendorAddress");

                    b.Navigation("VendorBillingAddress");

                    b.Navigation("VendorCreatedBy");

                    b.Navigation("VendorDeletedBy");

                    b.Navigation("VendorModifiedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.VendorProducts", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "VPCreatedBy")
                        .WithMany("Ref90Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("VPCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "VPDeletedBy")
                        .WithMany("Ref92Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("VPDeletedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "VPModifiedBy")
                        .WithMany("Ref91Navigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("VPModifiedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ProductMaster", "ProductMaster")
                        .WithMany()
                        .HasForeignKey("ProductMasterId");

                    b.Navigation("ProductMaster");

                    b.Navigation("VPCreatedBy");

                    b.Navigation("VPDeletedBy");

                    b.Navigation("VPModifiedBy");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ApplicationUser", b =>
                {
                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "RefCreatedBy")
                        .WithMany("Ref16Navigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("UserCreatedBy_FK");

                    b.HasOne("FieldMgt.Core.DomainModels.ApplicationUser", "RefDeletedBy")
                        .WithMany("Ref15Navigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("UserDeletedBy_FK");

                    b.Navigation("RefCreatedBy");

                    b.Navigation("RefDeletedBy");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.AddressDetail", b =>
                {
                    b.Navigation("LeadAddress1Id");

                    b.Navigation("LeadAddress2Id");

                    b.Navigation("OrderAddress1Id");

                    b.Navigation("OrderAddress2Id");

                    b.Navigation("ServiceProviderAddress1Id");

                    b.Navigation("ServiceProviderAddress2Id");

                    b.Navigation("ServiceProviderLocationAddress1Id");

                    b.Navigation("ServiceProviderLocationAddress2Id");

                    b.Navigation("StaffAddress1Id");

                    b.Navigation("StaffAddress2Id");

                    b.Navigation("VendorAddress1Id");

                    b.Navigation("VendorAddress2Id");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.GlobalCode", b =>
                {
                    b.Navigation("AddressTypeRef");

                    b.Navigation("ClientContactSourceRef");

                    b.Navigation("ClientSourceRef");

                    b.Navigation("Lead1Navigation");

                    b.Navigation("Lead2Navigation");

                    b.Navigation("Lead3Navigation");

                    b.Navigation("LeadCall1Navigation");

                    b.Navigation("LeadContact1Navigation");

                    b.Navigation("MaintenanceTypesRef");

                    b.Navigation("NotesTypeRef");

                    b.Navigation("OPStatus");

                    b.Navigation("OrdersStatus");

                    b.Navigation("ProductCategoryRef");

                    b.Navigation("Staff1Navigation");

                    b.Navigation("Staff2Navigation");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.Lead", b =>
                {
                    b.Navigation("Ref2LeadId");
                });

            modelBuilder.Entity("FieldMgt.Core.DomainModels.ApplicationUser", b =>
                {
                    b.Navigation("Ref10Navigation");

                    b.Navigation("Ref11Navigation");

                    b.Navigation("Ref12Navigation");

                    b.Navigation("Ref13Navigation");

                    b.Navigation("Ref14Navigation");

                    b.Navigation("Ref15Navigation");

                    b.Navigation("Ref16Navigation");

                    b.Navigation("Ref17Navigation");

                    b.Navigation("Ref18Navigation");

                    b.Navigation("Ref19Navigation");

                    b.Navigation("Ref1Navigation");

                    b.Navigation("Ref20Navigation");

                    b.Navigation("Ref21Navigation");

                    b.Navigation("Ref22Navigation");

                    b.Navigation("Ref23Navigation");

                    b.Navigation("Ref24Navigation");

                    b.Navigation("Ref25Navigation");

                    b.Navigation("Ref26Navigation");

                    b.Navigation("Ref27Navigation");

                    b.Navigation("Ref28Navigation");

                    b.Navigation("Ref29Navigation");

                    b.Navigation("Ref2Navigation");

                    b.Navigation("Ref30Navigation");

                    b.Navigation("Ref31Navigation");

                    b.Navigation("Ref32Navigation");

                    b.Navigation("Ref33Navigation");

                    b.Navigation("Ref34Navigation");

                    b.Navigation("Ref35Navigation");

                    b.Navigation("Ref36Navigation");

                    b.Navigation("Ref37Navigation");

                    b.Navigation("Ref38Navigation");

                    b.Navigation("Ref39Navigation");

                    b.Navigation("Ref3Navigation");

                    b.Navigation("Ref40Navigation");

                    b.Navigation("Ref41Navigation");

                    b.Navigation("Ref42Navigation");

                    b.Navigation("Ref43Navigation");

                    b.Navigation("Ref44Navigation");

                    b.Navigation("Ref45Navigation");

                    b.Navigation("Ref46Navigation");

                    b.Navigation("Ref47Navigation");

                    b.Navigation("Ref48Navigation");

                    b.Navigation("Ref49Navigation");

                    b.Navigation("Ref4Navigation");

                    b.Navigation("Ref50Navigation");

                    b.Navigation("Ref51Navigation");

                    b.Navigation("Ref52Navigation");

                    b.Navigation("Ref53Navigation");

                    b.Navigation("Ref54Navigation");

                    b.Navigation("Ref55Navigation");

                    b.Navigation("Ref56Navigation");

                    b.Navigation("Ref57Navigation");

                    b.Navigation("Ref58Navigation");

                    b.Navigation("Ref59Navigation");

                    b.Navigation("Ref5Navigation");

                    b.Navigation("Ref60Navigation");

                    b.Navigation("Ref61Navigation");

                    b.Navigation("Ref62Navigation");

                    b.Navigation("Ref63Navigation");

                    b.Navigation("Ref64Navigation");

                    b.Navigation("Ref65Navigation");

                    b.Navigation("Ref66Navigation");

                    b.Navigation("Ref67Navigation");

                    b.Navigation("Ref68Navigation");

                    b.Navigation("Ref69Navigation");

                    b.Navigation("Ref6Navigation");

                    b.Navigation("Ref70Navigation");

                    b.Navigation("Ref71Navigation");

                    b.Navigation("Ref72Navigation");

                    b.Navigation("Ref73Navigation");

                    b.Navigation("Ref74Navigation");

                    b.Navigation("Ref75Navigation");

                    b.Navigation("Ref76Navigation");

                    b.Navigation("Ref77Navigation");

                    b.Navigation("Ref78Navigation");

                    b.Navigation("Ref79Navigation");

                    b.Navigation("Ref7Navigation");

                    b.Navigation("Ref80Navigation");

                    b.Navigation("Ref81Navigation");

                    b.Navigation("Ref82Navigation");

                    b.Navigation("Ref83Navigation");

                    b.Navigation("Ref84Navigation");

                    b.Navigation("Ref85Navigation");

                    b.Navigation("Ref86Navigation");

                    b.Navigation("Ref87Navigation");

                    b.Navigation("Ref88Navigation");

                    b.Navigation("Ref89Navigation");

                    b.Navigation("Ref8Navigation");

                    b.Navigation("Ref90Navigation");

                    b.Navigation("Ref91Navigation");

                    b.Navigation("Ref92Navigation");

                    b.Navigation("Ref9Navigation");
                });
#pragma warning restore 612, 618
        }
    }
}
